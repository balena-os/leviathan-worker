ARG BALENA_ARCH=%%BALENA_ARCH%%

FROM balenalib/${BALENA_ARCH}-alpine-node:18-3.18 AS build-base

WORKDIR /usr/app

# hadolint ignore=DL3018
RUN apk add --no-cache libusb-dev dbus-dev python3 make build-base cmake git linux-headers eudev-dev libftdi1-dev popt-dev hidapi-dev

FROM build-base AS node-dev

COPY tsconfig.json ./
COPY typings ./typings
COPY lib ./lib
COPY bin ./bin

COPY package*.json ./
RUN npm ci

# build typescript
# hadolint ignore=DL3059
RUN npm run build

FROM debian:bookworm-20231218 AS ovmf

# hadolint ignore=DL3015,DL3008
RUN apt-get update \
  && apt-get install -y ovmf

FROM balenalib/${BALENA_ARCH}-alpine-node:18-3.18

WORKDIR /usr/app

ENV DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket

# hadolint ignore=DL3018
RUN apk add --no-cache \
  openssh-client \
  bluez \
  socat \
  rsync \
  libusb-dev dbus-dev eudev-dev \
  gstreamer-tools gst-plugins-base gst-plugins-bad gst-plugins-good \
  bridge bridge-utils iproute2 dnsmasq iptables \
  qemu-img qemu-system-x86_64 qemu-system-aarch64 qemu-system-arm \
  python3 py3-pip py3-setuptools \
  mdadm util-linux libftdi1-dev popt-dev hidapi-dev ca-certificates docker git screen \
  kmod

SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# check if zstd compressed modules are supported
RUN kmod -V | grep '+ZSTD'

COPY --from=ovmf /usr/share/OVMF /usr/share/OVMF

# fail if binaries are missing or won't run
RUN dockerd --version && docker --version

# hadolint ignore=DL3018
RUN apk add --no-cache uhubctl || true

# hadolint ignore=DL3013
RUN pip3 install --no-cache-dir usbsdmux

# create qemu-bridge-helper ACL file
# https://wiki.qemu.org/Features/HelperNetworking
RUN mkdir -p /etc/qemu \
  && echo "allow all" > /etc/qemu/bridge.conf \
  && chmod 0640 /etc/qemu/bridge.conf

COPY --from=node-dev /usr/app/package.json ./
COPY --from=node-dev /usr/app/node_modules ./node_modules
COPY --from=node-dev /usr/app/build ./build

COPY entry.sh entry.sh

CMD ["./entry.sh"]
